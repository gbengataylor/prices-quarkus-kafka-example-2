# Configuration file
# key = value
%dev.quarkus.http.port=9083

#kafka bootstrap
%dev.kafka.bootstrap.servers=localhost:9092
kafka.bootstrap.servers=prices-cluster-kafka-bootstrap:9092
app.consumer.group.id=price-converter-v2
# Configure the Kafka source (we read from it)
# prices source
mp.messaging.incoming.prices.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.prices.connector=smallrye-kafka
mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# add consumer group
mp.messaging.incoming.prices.group.id=${app.consumer.group.id}

#rates source
mp.messaging.incoming.rate.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.rate.connector=smallrye-kafka
mp.messaging.incoming.rate.value.deserializer=org.apache.kafka.common.serialization.DoubleDeserializer
# add consumer group
mp.messaging.incoming.rate.group.id=${app.consumer.group.id}

#needed for openshift build
quarkus.openshift.expose=true
# jdk 11
# quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7
# jdk 8 #deprecated
quarkus.s2i.base-jvm-image=registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
#crucial if using untrusted certificates
quarkus.kubernetes-client.trust-certs=true

#dekorate
quarkus.kubernetes.part-of=prices-v2