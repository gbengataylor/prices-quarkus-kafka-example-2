# Configuration file
# key = value
%dev.quarkus.http.port=9080


%dev.kafka.bootstrap.servers=localhost:9092
kafka.bootstrap.servers=prices-cluster-kafka-bootstrap:9092
# Configure the Kafka sink (we write to it)

#%dev.mp.messaging.outgoing.generated-price.bootstrap.servers=localhost:9092
mp.messaging.outgoing.generated-price.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.generated-price.connector=smallrye-kafka
mp.messaging.outgoing.generated-price.topic=prices
mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer


#if using kafka 
# %dev.mp.messaging.incoming.gen-price.bootstrap.servers=localhost:9092
# mp.messaging.incoming.gen-price.bootstrap.servers=${kafka.bootstrap.servers}
# mp.messaging.incoming.gen-price.connector=smallrye-kafka
# mp.messaging.incoming.gen-price.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

#needed for openshift build
quarkus.openshift.expose=true
# jdk 11
# quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7
# jdk 8 #deprecated
quarkus.s2i.base-jvm-image=registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
#crucial if using untrusted certificates
quarkus.kubernetes-client.trust-certs=true